% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/autoImpute.R
\name{autoImpute}
\alias{autoImpute}
\title{Automatic imputation of missing values}
\usage{
autoImpute(task, wl, classes = NULL, dummy.classes = c("numeric", "integer",
  "factor"), dummy.type = "numeric", ...)
}
\arguments{
\item{task}{(\code{Task}) An mlr Task.}

\item{wl}{(\code{WrappedLearner}) An ezmlr WrappedLearner object.}

\item{classes}{(\code{list}) Named list containing imputation techniques for
classes of columns. Default is \code{list(numeric = imputeConstant(0), integer = imputeConstant(0), factor = imputeConstant(0))}.}

\item{dummy.classes}{(\code{character}) Feature types to consider for imputation.
Default is \code{c("numeric", "integer", "factor")}. See
\code{\link[mlr]{makeImputeWrapper}}.}

\item{dummy.type}{(\code{character(1)}) How to encode dummy variables. Default is
"numeric". See \code{\link[mlr]{makeImputeWrapper}}.}

\item{...}{Additional arguments to pass to \code{\link[mlr]{makeImputeWrapper}}}
}
\description{
Checks a task to see if it has missing values, then checks a learner to see
if it is unable to handle missing values. If both are true, returns the
learner wrapped with \code{\link[mlr]{makeImputeWrapper}} which sets missing
values to zero and creates a 0/1 dummy column for each column on which
missings were present performed, where 1 indicates that the observation was
missing in the original column.
}
